{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","prototypes","PropTypes","string","func","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18c191a8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button onClick={onClick} style={{ backgroundColor: color }} className='btn'>\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue'\n}\n\nButton.prototypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      <Button\n        color={showAdd ? 'red' : 'green'}\n        text={showAdd ? 'Close' : 'Add'}\n        onClick={onAdd}\n      />\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\n// const headingStyle = {\n//     color:'red',\n//     backgroundColor: 'black',\n// }\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\n      <h3>\n        {task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={()=>onDelete(task.id)}/>\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n\n\n    return (\n        <>\n            {tasks.map((task)=>(\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n             ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({onAdd}) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const onSubmit=(e)=>{\n    e.preventDefault()\n    if (!text){\n        alert('Please add a task')\n        return\n    }\n    onAdd({text,day,reminder})\n    setText('')\n    setDay('')\n    setReminder(false)\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input\n          type='text'\n          placeholder='Add Task'\n          value={text}\n          onChange={e => setText(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input\n          type='text'\n          placeholder='Add Day & Time'\n          value={day}\n          onChange={e => setDay(e.target.value)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Set Reminder</label>\n        <input\n          type='checkbox'\n          checked={reminder}\n          value={reminder}\n          onChange={e => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input className='btn btn-block' type='submit' value='Save Task' />\n    </form>\n  )\n}\n\nexport default AddTask\n","import React from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\n\nfunction App () {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctor appointment',\n      day: 'Feb 5',\n      reminder: true\n    },\n    {\n      id: 2,\n      text: 'exam',\n      day: 'Feb 6',\n      reminder: true\n    },\n    {\n      id: 3,\n      text: 'Playgame',\n      day: 'Feb 7',\n      reminder: false\n    }\n  ])\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  const toggleReminder = id => {\n    setTasks(\n      tasks.map(task =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No Tasks to show'\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}